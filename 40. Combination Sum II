class Solution {
    public  void solve(int []nums, int tar, int idx, List<List<Integer>> ans, List<Integer> ds){
        if(tar == 0){
            ans.add(new ArrayList<>(ds));
            return;
        }

        for(int i=idx; i<nums.length; i++){
            if(i != idx && nums[i] == nums[i-1]){
                continue;
            }
            if(nums[i] > tar) break;
            ds.add(nums[i]);
            solve(nums, tar-nums[i], i+1, ans, ds);
            ds.remove(ds.size() - 1);
        }
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        solve(candidates, target, 0, ans, new ArrayList<>());
        return ans;
    }
}
