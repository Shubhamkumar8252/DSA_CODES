class Solution {
    private String helper(TreeNode root, Map<String, Integer> map, List<TreeNode> ans){
        if(root == null) return "$";

        String left = helper(root.left, map, ans);
        String right = helper(root.right, map, ans);
        String str = left + "," + right + "," + root.val;

        map.put(str, map.getOrDefault(str, 0) + 1);

        if(map.get(str) == 2){
            ans.add(root);
        }
        return str;
    }
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        List<TreeNode> ans = new ArrayList<>();
        HashMap<String, Integer> map = new HashMap<>();
        helper(root, map, ans);
        return ans;
    }
}
